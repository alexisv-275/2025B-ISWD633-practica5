version: '3.8'

services:
  postgresql-service:
    image: postgres:15
    container_name: postgres-container
    environment:
      POSTGRES_DB: sonarqube
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar_password
    volumes:
      - postgresql-data:/var/lib/postgresql/data
    networks:
      - sonarqube-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sonar"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: always

  sonarqube-service:
    image: sonarqube:lts-community
    container_name: sonarqube-container
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://postgresql-service:5432/sonarqube
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar_password
    volumes:
      - sonarqube-data:/opt/sonarqube/data
      - sonarqube-logs:/opt/sonarqube/logs
      - sonarqube-extensions:/opt/sonarqube/extensions
    networks:
      - sonarqube-network
    ports:
      - "9000:9000"
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:9000/api/system/status || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 80s
    restart: always
    depends_on:
      postgresql-service:
        condition: service_healthy

volumes:
  postgresql-data:
  sonarqube-data:
  sonarqube-logs:
  sonarqube-extensions:

networks:
  sonarqube-network:
    driver: bridge